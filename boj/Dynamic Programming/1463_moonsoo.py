import sys

input= sys.stdin.readline


"""
문제:

정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값 구하기

1 <= N <= 10^6
------------------------------------------------------------------------------------------------------------
풀이:

세 가지 연산 중 하나를 X는 취할 수 있다.
그러면 X/3, X/2, X-1 의 경우의 수 중 제일 작은 경우의 수 + 나누기 혹은 -1의 연산 1번
이 X의 최소 연산 횟수가 된다.

이 때, X/3, X/2가 가능해야 해당 연산이 가능하기에 % 연산자로 확인해주었다.
------------------------------------------------------------------------------------------------------------
유의할 점:

1.
min() 함수에 세 가지 경우를 모두 넣고 최소값을 비교하고 싶어서 모두 넣고 나누기 연산의 경우 if문을 통해 배수인지를 확인해주었다.
만약 배수가 아닌 경우, 이상한 값이 min() 연산에 같이 들어가버리면 안되므로
처음에는 numpy를 import해서 배수가 아니면 numpy.inf를 넣어주었다.
그런데 백준에서 외부 모듈을 사용하면 ModuleNotFoundError가 나는 것을 확인했다.
이를 해결하기 위해 최대값을 현재 조회하고 있는 X로 넣어주었다.
왜냐하면 dp[X]의 최대는 계속 1씩 빼는 경우이므로 최대가 X-1이다.
따라서, X를 넣어주면 이는 dp[X]의 최대여서 min() 연산에서 고려되는 것을 방지할 수 있다.

2.
dp[1]의 경우, 그 자체로 1이기에 0으로 초기화하고 해야한다.
그러나 dp[1] = 1로 잘못 초기화하고 제출하여 오답 처리를 받았었다.
"""

N = int(input())

dp = [0] * (10**6 + 1)
dp[2] = dp[3] = 1

for X in range(4, N+1):
    dp[X] = min(dp[X//3] if X%3 == 0 else X, dp[X//2] if X%2 == 0 else X, dp[X-1]) + 1

print(dp[N])