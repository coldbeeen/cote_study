S = list(input())
T = list(input())



while len(S) < len(T):
    last = T[-1]

    if last == 'A':
        T.pop()
    else:
        T.pop()
        T.reverse()


print(int(T==S))

"""
문제:

A, B로 이루어진 문자열 , S, T에서 S->T 가능??

가능한 연산:
1. 문자열 뒤에 A 추가
2. 문자열 뒤집고 B추가
------------------------------------------------------------------------------------------------
풀이:

뒤에 A 혹은 B가 추가되므로 뒤부터 보면서 A, B인지에 따라 역연산을 한다.
그러다가 길이가 같아졌을 때, 동일한지 여부를 출력한다.

문자열을 뒤집는 연산은 [::-1]도 가능하지만 reverse()가 메모리 사용량이 적다고 한다.

한 가지 애를 먹었던 점은 문자열을 뒤집는다를 'A->B, B->A'로 처음에 해석했던 것이다.
그러나 문자열 'ABB'를 'BBA'로 뒤집는 것이었다!
"""