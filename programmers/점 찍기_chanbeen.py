#약 44분 소요

def solution(k, d):
    answer = 0
    
    for x in range(0, d + 1, k):
        y = int((d ** 2 - x ** 2) ** 0.5)
        
        answer += (y // k) + 1
    
    return answer

#a와 b의 max는 k*d임, 축 위에서 이동하여 점 찍을 때 가장 값이 커지므로
#2중 반복문으로 시도하면 시간 초과 발생
#d x d 형태의 2차원 좌표계라면 (0, d)와 (d, 0)이 max이고, max 좌표 기준으로 부채꼴이 형성됨
#부채꼴은 반지름이 d인 원의 1/4과 모양이 동일
#따라서, 피타고라스 공식을 사용 가능
#x로 for문을 돌면서, 좌표 x에서 가능한 y의 최대값을 구해줌 (y^2 = d^2 - x^2)
#y는 실수이므로, int형으로 변환 후 y // k의 개수를 덧셈 (y좌표도 k씩 증가하므로)
#축 위의 점도 카운트에 포함되므로, 추가 + 1